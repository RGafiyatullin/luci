---
source: src/bin/luci_graph.rs
expression: result
---
digraph test { rankdir=LR layout=dot
  "EVT:run for at least" [label="DELAY\nid=EVT:run for at least\n\nfor: 3m
step: 12s
"]
  "EVT:bind:Env" [label="BIND\nid=EVT:bind:Env\n\ndst:
- cqg
- Env
- now_nanos: $ENV_NOW.nanos
  now_rfc3339: $ENV_NOW.rfc3339
src: !inject ENV
"]
  "EVT:start" [label="SEND\nid=EVT:start\n\nfrom: someone-else
type: Start
data: !literal
  target:
    ExecGate: 104
"]
  "EVT:request:SubscribeToInstrumentDynamicData" [label="RECV\nid=EVT:request:SubscribeToInstrumentDynamicData\n\ntype: SubscribeToInstrumentDynamicData
data: !bind $_
from: gate
"]
  "EVT:response:SubscribeToInstrumentDynamicData" [label="RESPOND\nid=EVT:response:SubscribeToInstrumentDynamicData\n\nfrom: someone-else
to_request: request:SubscribeToInstrumentDynamicData
data: !inject SubscribeToInstrumentDynamicData::Response
"]
  "EVT:request:FetchBalancesSnapshot" [label="RECV\nid=EVT:request:FetchBalancesSnapshot\n\ntype: FetchBalancesSnapshot
data: !bind
- real_account
- FetchBalancesSnapshot
- account_id: $ACCOUNT_ID
from: gate
"]
  "EVT:response:FetchBalancesSnapshot" [label="RESPOND\nid=EVT:response:FetchBalancesSnapshot\n\nfrom: someone-else
to_request: request:FetchBalancesSnapshot
data: !bind
  account_id: $ACCOUNT_ID
  entries: {}
  platform_time: $ENV_NOW.nanos
"]
  "EVT:request:FetchPositionsSnapshot" [label="RECV\nid=EVT:request:FetchPositionsSnapshot\n\ntype: FetchPositionsSnapshot
data: !bind
- real_account
- FetchPositionsSnapshot
- account_id: $ACCOUNT_ID
from: gate
"]
  "EVT:response:FetchPositionsSnapshot" [label="RESPOND\nid=EVT:response:FetchPositionsSnapshot\n\nfrom: someone-else
to_request: request:FetchPositionsSnapshot
data: !bind
  account_id: $ACCOUNT_ID
  entries: {}
  platform_time: $ENV_NOW.nanos
"]
  "EVT:msg:UpdateRealAccountStatus" [label="RECV\nid=EVT:msg:UpdateRealAccountStatus\n\ntype: UpdateRealAccountStatus
data: !bind $UpdateRealAccountStatus.msg
from: gate
"]
  "EVT:msg:ExecGateStatusReport" [label="RECV\nid=EVT:msg:ExecGateStatusReport\n\ntype: ExecGateStatusReport
data: !bind $ExecGateStatusReport.msg
from: gate
"]
  "EVT:request:LoadState" [label="RECV\nid=EVT:request:LoadState\n\ntype: LoadState
data: !bind $LoadState.request
from: gate
"]
  "EVT:response:LoadState" [label="RESPOND\nid=EVT:response:LoadState\n\nfrom: someone-else
to_request: request:LoadState
data: !literal
  Err: NotFound
"]
  "EVT:msg:GconStartExecConnector" [label="RECV\nid=EVT:msg:GconStartExecConnector\n\ntype: GconStartExecConnector
data: !bind
- gate_sdk
- GconStartExecConnector
- $GconStartExecConnector.msg
from: gate
"]
  "EVT:bind:GconStartExecConnector" [label="BIND\nid=EVT:bind:GconStartExecConnector\n\ndst:
  account_id: $ACCOUNT_ID
src: !bind $GconStartExecConnector.msg
"]
  "EVT:msg:GconConnectorStarted" [label="SEND\nid=EVT:msg:GconConnectorStarted\n\nfrom: conn
to: gate
type: GconConnectorStarted
data: !bind
  account_id: $ACCOUNT_ID
"]
  "EVT:msg:GconOpenStream[1]" [label="RECV\nid=EVT:msg:GconOpenStream[1]\n\ntype: GconOpenStream
data: !bind
- gate_sdk
- GconOpenStream
- $GconOpenStream[1].msg
from: gate
to: conn
"]
  "EVT:msg:GconOpenStream[2]" [label="RECV\nid=EVT:msg:GconOpenStream[2]\n\ntype: GconOpenStream
data: !bind
- gate_sdk
- GconOpenStream
- $GconOpenStream[2].msg
from: gate
to: conn
"]
  "EVT:bind:GconOpenStream[1]" [label="BIND\nid=EVT:bind:GconOpenStream[1]\n\ndst:
  connection:
    account_id: $ACCOUNT_ID
  stream_id: $STREAM_ID[1]
src: !bind $GconOpenStream[1].msg
"]
  "EVT:bind:GconOpenStream[2]" [label="BIND\nid=EVT:bind:GconOpenStream[2]\n\ndst:
  connection:
    account_id: $ACCOUNT_ID
  stream_id: $STREAM_ID[2]
src: !bind $GconOpenStream[2].msg
"]
  "EVT:msg:GconStreamOpened[1]" [label="SEND\nid=EVT:msg:GconStreamOpened[1]\n\nfrom: conn
to: gate
type: GconStreamOpened
data: !bind
  open: $GconOpenStream[1].msg
"]
  "EVT:msg:GconStreamOpened[2]" [label="SEND\nid=EVT:msg:GconStreamOpened[2]\n\nfrom: conn
to: gate
type: GconStreamOpened
data: !bind
  open: $GconOpenStream[2].msg
"]
  "EVT:msg:GconPollOrders" [label="RECV\nid=EVT:msg:GconPollOrders\n\ntype: GconPollOrders
data: !bind
- gate_sdk
- GconPollOrders
- $GconPollOrders.msg
from: gate
to: conn
"]
  "EVT:bind:GconPollOrders" [label="BIND\nid=EVT:bind:GconPollOrders\n\ndst:
  connection: $GconPollOrders.connection
src: !bind $GconPollOrders.msg
"]
  "EVT:msg:GconPollOrdersFinished" [label="SEND\nid=EVT:msg:GconPollOrdersFinished\n\nfrom: conn
to: gate
type: GconPollOrdersFinished
data: !bind
  platform_time: $ENV_NOW.nanos
  reports: []
  request:
    asset_id: null
    connection: $GconPollOrders.connection
    happens_after_exchange_time: null
    instrument_id: null
    kind: Active
  total_orders_polled: 0
"]
  "EVT:msg:Cqg::PositionStatus[1].snapshot" [label="SEND\nid=EVT:msg:Cqg::PositionStatus[1].snapshot\n\nfrom: conn
to: gate
type: CqgCustomMessage
data: !bind
  PositionStatus:
    account_id: $ACCOUNT_ID
    instrument_id: I:108
    status:
      is_snapshot: true
      open_positions:
      - id: 1
        qty: 1.0
    stream_id: $STREAM_ID[1]
"]
  "EVT:msg:Cqg::PositionsInitialSyncDone[1]" [label="SEND\nid=EVT:msg:Cqg::PositionsInitialSyncDone[1]\n\nfrom: conn
to: gate
type: CqgCustomMessage
data: !bind
  PositionsInitialSyncDone:
    account_id: $ACCOUNT_ID
    stream_id: $STREAM_ID[1]
"]
  "EVT:msg:Cqg::PositionStatus[2].snapshot" [label="SEND\nid=EVT:msg:Cqg::PositionStatus[2].snapshot\n\nfrom: conn
to: gate
type: CqgCustomMessage
data: !bind
  PositionStatus:
    account_id: $ACCOUNT_ID
    instrument_id: I:108
    status:
      is_snapshot: true
      open_positions:
      - id: 15
        qty: 1.0
    stream_id: $STREAM_ID[2]
"]
  "EVT:msg:Cqg::PositionsInitialSyncDone[2]" [label="SEND\nid=EVT:msg:Cqg::PositionsInitialSyncDone[2]\n\nfrom: conn
to: gate
type: CqgCustomMessage
data: !bind
  PositionsInitialSyncDone:
    account_id: $ACCOUNT_ID
    stream_id: $STREAM_ID[2]
"]
  "EVT:10-sec-happens_after-both-streams-opened" [label="DELAY\nid=EVT:10-sec-happens_after-both-streams-opened\n\nfor: 10s
step: 1s
"]
  "EVT:msg:Cqg::PositionStatus[1].update" [label="SEND\nid=EVT:msg:Cqg::PositionStatus[1].update\n\nfrom: conn
to: gate
type: CqgCustomMessage
data: !bind
  PositionStatus:
    account_id: $ACCOUNT_ID
    instrument_id: I:108
    status:
      is_snapshot: false
      open_positions:
      - id: 1
        qty: 3.0
      - id: 2
        qty: 1.0
    stream_id: $STREAM_ID[1]
"]
  "EVT:msg:Cqg::PositionStatus[2].update" [label="SEND\nid=EVT:msg:Cqg::PositionStatus[2].update\n\nfrom: conn
to: gate
type: CqgCustomMessage
data: !bind
  PositionStatus:
    account_id: $ACCOUNT_ID
    instrument_id: I:108
    status:
      is_snapshot: false
      open_positions:
      - id: 15
        qty: 3.0
      - id: 16
        qty: 1.0
    stream_id: $STREAM_ID[2]
"]
  "EVT:msg:PositionCorrected" [label="RECV\nid=EVT:msg:PositionCorrected\n\ntype: PositionCorrected
data: !bind
- real_account
- PositionCorrected
- account_id: $ACCOUNT_ID
  amount_total: '4.0'
  instrument_id: I:108:BTCUSDT|CmeGlobexCqg
from: gate
"]
  "EVT:start" -> "EVT:request:SubscribeToInstrumentDynamicData"
  "EVT:request:SubscribeToInstrumentDynamicData" -> "EVT:response:SubscribeToInstrumentDynamicData"
  "EVT:start" -> "EVT:request:FetchBalancesSnapshot"
  "EVT:request:FetchBalancesSnapshot" -> "EVT:response:FetchBalancesSnapshot"
  "EVT:start" -> "EVT:request:FetchPositionsSnapshot"
  "EVT:request:FetchPositionsSnapshot" -> "EVT:response:FetchPositionsSnapshot"
  "EVT:start" -> "EVT:msg:UpdateRealAccountStatus"
  "EVT:start" -> "EVT:msg:ExecGateStatusReport"
  "EVT:start" -> "EVT:request:LoadState"
  "EVT:request:LoadState" -> "EVT:response:LoadState"
  "EVT:start" -> "EVT:msg:GconStartExecConnector"
  "EVT:msg:GconStartExecConnector" -> "EVT:bind:GconStartExecConnector"
  "EVT:bind:GconStartExecConnector" -> "EVT:msg:GconConnectorStarted"
  "EVT:msg:GconConnectorStarted" -> "EVT:msg:GconOpenStream[1]"
  "EVT:msg:GconConnectorStarted" -> "EVT:msg:GconOpenStream[2]"
  "EVT:msg:GconOpenStream[1]" -> "EVT:bind:GconOpenStream[1]"
  "EVT:msg:GconOpenStream[2]" -> "EVT:bind:GconOpenStream[2]"
  "EVT:bind:GconOpenStream[1]" -> "EVT:msg:GconStreamOpened[1]"
  "EVT:bind:GconOpenStream[2]" -> "EVT:msg:GconStreamOpened[2]"
  "EVT:msg:GconConnectorStarted" -> "EVT:msg:GconPollOrders"
  "EVT:msg:GconPollOrders" -> "EVT:bind:GconPollOrders"
  "EVT:bind:GconPollOrders" -> "EVT:msg:GconPollOrdersFinished"
  "EVT:msg:GconStreamOpened[1]" -> "EVT:msg:Cqg::PositionStatus[1].snapshot"
  "EVT:msg:Cqg::PositionStatus[1].snapshot" -> "EVT:msg:Cqg::PositionsInitialSyncDone[1]"
  "EVT:msg:GconStreamOpened[2]" -> "EVT:msg:Cqg::PositionStatus[2].snapshot"
  "EVT:msg:Cqg::PositionStatus[2].snapshot" -> "EVT:msg:Cqg::PositionsInitialSyncDone[2]"
  "EVT:bind:GconOpenStream[1]" -> "EVT:10-sec-happens_after-both-streams-opened"
  "EVT:bind:GconOpenStream[2]" -> "EVT:10-sec-happens_after-both-streams-opened"
  "EVT:10-sec-happens_after-both-streams-opened" -> "EVT:msg:Cqg::PositionStatus[1].update"
  "EVT:10-sec-happens_after-both-streams-opened" -> "EVT:msg:Cqg::PositionStatus[2].update"
  "EVT:msg:Cqg::PositionStatus[1].update" -> "EVT:msg:PositionCorrected"
  "EVT:msg:Cqg::PositionStatus[2].update" -> "EVT:msg:PositionCorrected"

}
