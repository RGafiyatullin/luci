---
source: src/bin/luci_graph.rs
expression: result
---
digraph {
  rankdir=LR;
  "EVT:run for at least" [label="DELAY\nid=EVT:run for at least\n\nfor: 3m
step: 12s
"];
  "EVT:bind:Env" [label="BIND\nid=EVT:bind:Env\n\ndst:
- abc
- Env
- now_nanos: $ENV_NOW.nanos
  now_rfc3339: $ENV_NOW.rfc3339
src: !inject ENV
"];
  "EVT:start" [label="SEND\nid=EVT:start\n\nfrom: someone-else
type: Start
data: !literal
  target:
    NodeId: 104
"];
  "EVT:request:SubscribeToData" [label="RECV\nid=EVT:request:SubscribeToData\n\ntype: SubscribeToData
data: $_
from: master
"];
  "EVT:response:SubscribeToData" [label="RESPOND\nid=EVT:response:SubscribeToData\n\nfrom: someone-else
to_request: request:SubscribeToData
data: !inject SubscribeToData::Response
"];
  "EVT:request:FetchSettings" [label="RECV\nid=EVT:request:FetchSettings\n\ntype: FetchSettings
data:
- real
- FetchSettings
- account_id: $ACCOUNT_ID
from: master
"];
  "EVT:response:FetchSettings" [label="RESPOND\nid=EVT:response:FetchSettings\n\nfrom: someone-else
to_request: request:FetchSettings
data: !bind
  account_id: $ACCOUNT_ID
  entries: {}
  local_time: $ENV_NOW.nanos
"];
  "EVT:request:FetchData" [label="RECV\nid=EVT:request:FetchData\n\ntype: FetchData
data:
- real
- FetchData
- account_id: $ACCOUNT_ID
from: master
"];
  "EVT:response:FetchData" [label="RESPOND\nid=EVT:response:FetchData\n\nfrom: someone-else
to_request: request:FetchData
data: !bind
  account_id: $ACCOUNT_ID
  entries: {}
  local_time: $ENV_NOW.nanos
"];
  "EVT:msg:UpdateStatus" [label="RECV\nid=EVT:msg:UpdateStatus\n\ntype: UpdateStatus
data: $UpdateStatus.msg
from: master
"];
  "EVT:msg:RunStatusReport" [label="RECV\nid=EVT:msg:RunStatusReport\n\ntype: RunStatusReport
data: $RunStatusReport.msg
from: master
"];
  "EVT:request:LoadState" [label="RECV\nid=EVT:request:LoadState\n\ntype: LoadState
data: $LoadState.request
from: master
"];
  "EVT:response:LoadState" [label="RESPOND\nid=EVT:response:LoadState\n\nfrom: someone-else
to_request: request:LoadState
data: !literal
  Err: NotFound
"];
  "EVT:msg:StartWorker" [label="RECV\nid=EVT:msg:StartWorker\n\ntype: StartWorker
data:
- master_sdk
- StartWorker
- $StartWorker.msg
from: master
"];
  "EVT:bind:StartWorker" [label="BIND\nid=EVT:bind:StartWorker\n\ndst:
  account_id: $ACCOUNT_ID
src: !bind $StartWorker.msg
"];
  "EVT:msg:WorkerIsStarted" [label="SEND\nid=EVT:msg:WorkerIsStarted\n\nfrom: conn
to: master
type: WorkerIsStarted
data: !bind
  account_id: $ACCOUNT_ID
"];
  "EVT:msg:OpenConnection[1]" [label="RECV\nid=EVT:msg:OpenConnection[1]\n\ntype: OpenConnection
data:
- master_sdk
- OpenConnection
- $OpenConnection[1].msg
from: master
to: conn
"];
  "EVT:msg:OpenConnection[2]" [label="RECV\nid=EVT:msg:OpenConnection[2]\n\ntype: OpenConnection
data:
- master_sdk
- OpenConnection
- $OpenConnection[2].msg
from: master
to: conn
"];
  "EVT:bind:OpenConnection[1]" [label="BIND\nid=EVT:bind:OpenConnection[1]\n\ndst:
  connection:
    account_id: $ACCOUNT_ID
  stream_id: $STREAM_ID[1]
src: !bind $OpenConnection[1].msg
"];
  "EVT:bind:OpenConnection[2]" [label="BIND\nid=EVT:bind:OpenConnection[2]\n\ndst:
  connection:
    account_id: $ACCOUNT_ID
  stream_id: $STREAM_ID[2]
src: !bind $OpenConnection[2].msg
"];
  "EVT:msg:ConnectionIsOpened[1]" [label="SEND\nid=EVT:msg:ConnectionIsOpened[1]\n\nfrom: conn
to: master
type: ConnectionIsOpened
data: !bind
  open: $OpenConnection[1].msg
"];
  "EVT:msg:ConnectionIsOpened[2]" [label="SEND\nid=EVT:msg:ConnectionIsOpened[2]\n\nfrom: conn
to: master
type: ConnectionIsOpened
data: !bind
  open: $OpenConnection[2].msg
"];
  "EVT:msg:Poll" [label="RECV\nid=EVT:msg:Poll\n\ntype: Poll
data:
- master_sdk
- Poll
- $Poll.msg
from: master
to: conn
"];
  "EVT:bind:Poll" [label="BIND\nid=EVT:bind:Poll\n\ndst:
  connection: $Poll.connection
src: !bind $Poll.msg
"];
  "EVT:msg:InitCompleted" [label="SEND\nid=EVT:msg:InitCompleted\n\nfrom: conn
to: master
type: InitCompleted
data: !bind
  local_time: $ENV_NOW.nanos
  reports: []
  request:
    connection: $Poll.connection
    happens_after_exchange_time: null
    item_id: null
    kind: Active
    user_id: null
  total_orders_polled: 0
"];
  "EVT:msg:abc::MessageStatus[1].snapshot" [label="SEND\nid=EVT:msg:abc::MessageStatus[1].snapshot\n\nfrom: conn
to: master
type: CustomMessage
data: !bind
  MessageStatus:
    account_id: $ACCOUNT_ID
    status:
      is_ready: true
      items:
      - id: 1
        pid: 1.0
    stream_id: $STREAM_ID[1]
    user_id: 108
"];
  "EVT:msg:abc::MessagesInitialSyncDone[1]" [label="SEND\nid=EVT:msg:abc::MessagesInitialSyncDone[1]\n\nfrom: conn
to: master
type: CustomMessage
data: !bind
  MessagesInitialSyncDone:
    account_id: $ACCOUNT_ID
    stream_id: $STREAM_ID[1]
"];
  "EVT:msg:abc::MessageStatus[2].snapshot" [label="SEND\nid=EVT:msg:abc::MessageStatus[2].snapshot\n\nfrom: conn
to: master
type: CustomMessage
data: !bind
  MessageStatus:
    account_id: $ACCOUNT_ID
    status:
      is_ready: true
      items:
      - id: 15
        pid: 1.0
    stream_id: $STREAM_ID[2]
    user_id: I:108
"];
  "EVT:msg:abc::MessagesInitialSyncDone[2]" [label="SEND\nid=EVT:msg:abc::MessagesInitialSyncDone[2]\n\nfrom: conn
to: master
type: CustomMessage
data: !bind
  MessagesInitialSyncDone:
    account_id: $ACCOUNT_ID
    stream_id: $STREAM_ID[2]
"];
  "EVT:10-sec-happens_after-both-connections-opened" [label="DELAY\nid=EVT:10-sec-happens_after-both-connections-opened\n\nfor: 10s
step: 1s
"];
  "EVT:msg:abc::MessageStatus[1].update" [label="SEND\nid=EVT:msg:abc::MessageStatus[1].update\n\nfrom: conn
to: master
type: CustomMessage
data: !bind
  MessageStatus:
    account_id: $ACCOUNT_ID
    status:
      is_ready: false
      items:
      - id: 1
        pid: 3
      - id: 2
        pid: 1.0
    stream_id: $STREAM_ID[1]
    user_id: I:108
"];
  "EVT:msg:abc::MessageStatus[2].update" [label="SEND\nid=EVT:msg:abc::MessageStatus[2].update\n\nfrom: conn
to: master
type: CustomMessage
data: !bind
  MessageStatus:
    account_id: $ACCOUNT_ID
    status:
      is_ready: false
      items:
      - id: 15
        pid: 3
      - id: 16
        pid: 1
    stream_id: $STREAM_ID[2]
    user_id: 108
"];
  "EVT:msg:DataAdjustment" [label="RECV\nid=EVT:msg:DataAdjustment\n\ntype: DataAdjustment
data:
- real
- DataAdjustment
- account_id: $ACCOUNT_ID
  amount_total: '4.0'
  user_id: 108
from: master
"];
  "EVT:start" -> "EVT:request:SubscribeToData";
  "EVT:request:SubscribeToData" -> "EVT:response:SubscribeToData";
  "EVT:start" -> "EVT:request:FetchSettings";
  "EVT:request:FetchSettings" -> "EVT:response:FetchSettings";
  "EVT:start" -> "EVT:request:FetchData";
  "EVT:request:FetchData" -> "EVT:response:FetchData";
  "EVT:start" -> "EVT:msg:UpdateStatus";
  "EVT:start" -> "EVT:msg:RunStatusReport";
  "EVT:start" -> "EVT:request:LoadState";
  "EVT:request:LoadState" -> "EVT:response:LoadState";
  "EVT:start" -> "EVT:msg:StartWorker";
  "EVT:msg:StartWorker" -> "EVT:bind:StartWorker";
  "EVT:bind:StartWorker" -> "EVT:msg:WorkerIsStarted";
  "EVT:msg:WorkerIsStarted" -> "EVT:msg:OpenConnection[1]";
  "EVT:msg:WorkerIsStarted" -> "EVT:msg:OpenConnection[2]";
  "EVT:msg:OpenConnection[1]" -> "EVT:bind:OpenConnection[1]";
  "EVT:msg:OpenConnection[2]" -> "EVT:bind:OpenConnection[2]";
  "EVT:bind:OpenConnection[1]" -> "EVT:msg:ConnectionIsOpened[1]";
  "EVT:bind:OpenConnection[2]" -> "EVT:msg:ConnectionIsOpened[2]";
  "EVT:msg:WorkerIsStarted" -> "EVT:msg:Poll";
  "EVT:msg:Poll" -> "EVT:bind:Poll";
  "EVT:bind:Poll" -> "EVT:msg:InitCompleted";
  "EVT:msg:ConnectionIsOpened[1]" -> "EVT:msg:abc::MessageStatus[1].snapshot";
  "EVT:msg:abc::MessageStatus[1].snapshot" -> "EVT:msg:abc::MessagesInitialSyncDone[1]";
  "EVT:msg:ConnectionIsOpened[2]" -> "EVT:msg:abc::MessageStatus[2].snapshot";
  "EVT:msg:abc::MessageStatus[2].snapshot" -> "EVT:msg:abc::MessagesInitialSyncDone[2]";
  "EVT:bind:OpenConnection[1]" -> "EVT:10-sec-happens_after-both-connections-opened";
  "EVT:bind:OpenConnection[2]" -> "EVT:10-sec-happens_after-both-connections-opened";
  "EVT:10-sec-happens_after-both-connections-opened" -> "EVT:msg:abc::MessageStatus[1].update";
  "EVT:10-sec-happens_after-both-connections-opened" -> "EVT:msg:abc::MessageStatus[2].update";
  "EVT:msg:abc::MessageStatus[1].update" -> "EVT:msg:DataAdjustment";
  "EVT:msg:abc::MessageStatus[2].update" -> "EVT:msg:DataAdjustment";
}
